<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gduf.bilibili.dao.VideoDao">
    <!--新增视频-->
    <insert id="addVideos" parameterType="com.gduf.bilibili.domain.Video" useGeneratedKeys="true" keyProperty="id">
        insert into t_video(userId,
                            url,
                            thumbnail,
                            title,
                            type,
                            duration,
                            area,
                            description,
                            createTime)
        values (#{userId},
                #{url},
                #{thumbnail},
                #{title},
                #{type},
                #{duration},
                #{area},
                #{description},
                #{createTime})
    </insert>
    <!--新增视频标签-->
    <insert id="batchAddVideoTags" parameterType="java.util.List">
        insert into
        t_video_tag
        (videoId, tagId, createTime)
        values
        <foreach collection="tagList" item="videoTag" separator=",">
            (#{videoTag.videoId},#{tagId},#{createTime})
        </foreach>
    </insert>
    <!--查询视频条数-->
    <select id="pageCountVideo" parameterType="java.util.Map" resultType="java.lang.Integer">
        select
        count(1)
        from
        t_video
        where
        1=1
        <if test="area!=null and area!=''">
            and area=#{area}
        </if>
    </select>
    <!--查询视频记录-->
    <select id="pageListVideos" parameterType="java.util.Map" resultType="com.gduf.bilibili.domain.Video">
        select *
        from
        t_video
        where
        1=1
        <if test="area!=null and area!=''">
            and area=#{area}
        </if>
    </select>
    <!--根据视频id获取视频标签列表-->
    <select id="getVideoTagsByVideoId" parameterType="java.lang.Long" resultType="com.gduf.bilibili.domain.VideoTag">
        select *
        from t_video_tag
        where videoId = #{videoId}
    </select>
    <!--根据id查询视频-->
    <select id="getVideoById" parameterType="java.lang.Long" resultType="com.gduf.bilibili.domain.Video">
        select *
        from t_video
        where id = #{id}
    </select>
    <!--根据用户id和视频id获取点赞记录-->
    <select id="getVideoLikeByVideoIdAndUserId" resultType="com.gduf.bilibili.domain.VideoLike">
        select *
        from t_video_like
        where userId = #{userId}
          and videoId = #{videoId}
    </select>
    <!--添加视频点赞记录-->
    <insert id="addVideoLike" parameterType="com.gduf.bilibili.domain.VideoLike">
        insert into t_video_like(userId, videoId, createTime)
        values (#{userId}, #{videoId}, #{createTime})
    </insert>
    <!--取消视频点赞记录-->
    <delete id="deleteVideoLike">
        delete
        from t_video_like
        where userId = #{userId}
          and videoId = #{videoId}
    </delete>
    <!--根据视频id获取视频点赞数量-->
    <select id="getVideoLikesByVideoId" parameterType="java.lang.Long" resultType="java.lang.Long">
        select count(1)
        from t_video_like
        where videoId = #{videoId}
    </select>
    <!--删除视频收藏-->
    <delete id="deleteVideoCollection" parameterType="java.lang.Long">
        delete
        from t_video_collection
        where userId = #{userId}
          and videoId = #{videoId}
    </delete>
    <!--添加视频收藏-->
    <insert id="addVideoCollection" parameterType="com.gduf.bilibili.domain.VideoCollection">
        insert into t_video_collection(videoId, userId, groupId, createTime)
        values (#{videoId}, #{userId}, #{groupId}, #{createTime})
    </insert>
    <!--获取视频的收藏数量-->
    <select id="getVideoCollectionsByVideoId" parameterType="java.lang.Long" resultType="java.lang.Long">
        select count(1)
        from t_video_collection
        where videoId = #{videoId}
    </select>
    <!--根据用户id和视频id获取视频收藏几里路-->
    <select id="getVideoCollectionByVideoIdAndUserId" resultType="com.gduf.bilibili.domain.VideoLike">
        select *
        from t_video_collection
        where userId = #{userId}
          and videoId = #{videoId}
    </select>
    <!--根据用户id和视频id查询用户投币记录-->
    <select id="getVideoCoinByVideoIdAndUserId" resultType="com.gduf.bilibili.domain.VideoCoin">
        select *
        from t_video_coin
        where userId = #{videoId}
          and videoId = #{videoId}
    </select>
    <!--新增投币-->
    <insert id="addVideoCoins" parameterType="com.gduf.bilibili.domain.VideoCoin">
        insert into t_video_coin(userId, videoId, amount, createTime)
        values (#{userId}, #{videoId}, #{amount}, #{createTime})
    </insert>
    <!--更新视频硬币数量-->
    <update id="updateVideoCoins" parameterType="com.gduf.bilibili.domain.VideoCoin">
        update t_video_coin
        set amount=#{amount} and updateTime = #{updateTime}
        where userId = #{userId}
          and videoId = #{videoId}
    </update>
    <!--获取视频硬币数量-->
    <select id="getVideoCoinAmount" resultType="java.lang.Long">
        select sum(amount)
        from t_video_coin
        where videoId = #{videoId}
    </select>
    <!--新增评论-->
    <insert id="addVideoComments" parameterType="com.gduf.bilibili.domain.VideoComment">
        insert into t_video_comment(videoId, userId, comment, replyUserId, rootId, createTime)
        values (#{videoId}, #{userId}, #{comment}, #{replyUserId}, #{rootId}, #{createTime})
    </insert>
    <!--查询视频的总条数-->
    <select id="pageCountVideoComments" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(1)
        from t_video_comment
        where rootId is null
          and videoId = #{videoId}
    </select>
    <!--分页查询视频评论-->
    <select id="pageListVideoComments" parameterType="java.util.Map" resultType="com.gduf.bilibili.domain.VideoComment">
        select *
        from t_video_comment
        where rootId is null
          and videoId = #{videoId}
        order by id desc
        limit #{start},#{limit}
    </select>
    <select id="batchGetVideoCommentsByRootIds" parameterType="java.util.List" resultType="com.gduf.bilibili.domain.VideoComment">
        select * from t_video_comment
        where rootId in
        <foreach collection="parentIds" item="rootId" index="index" separator="," open="(" close=")">
            #{rootId}
        </foreach>
        order by id
    </select>
</mapper>